/*////////////////////////////
@component/flex
////////////////////////////*/
@use 'sass:color';
@use 'sass:math';
@use '../foundation/variable' as *;
@use '../foundation/functions' as *;
@use '../foundation/mixins' as *;

/*! purgecss start ignore */

$flexGutterMap: (
  '0': 0,
  '1': 1px,
  '2': 2px,
  '1_': 1px * 0.5,
  // '3_': 3px * 0.5,
  '5': 5px,
  '5_': 5px * 0.5,
  '10': 10px,
  '15': 15px,
  '15_': 15px * 0.5,
  '20': 20px,
  '25': 25px,
  '25_': 25px * 0.5,
  '30': 30px,
  '35': 35px,
  '35_': 35px * 0.5,
  '40': 40px,
  '45': 45px,
  '45_': 45px * 0.5,
  '50': 50px,
  // '55': 55px,
  '55_': 55px * 0.5,
  // '60': 60px,
  // '65': 65px,
  '65_': 65px * 0.5,
  // '70': 70px,
  // '75': 75px,
  // '75_': 75px * 0.5,
  // '80': 80px,
  // '85': 85px,
  // '85_': 85px * 0.5,
  // '90': 90px,
  // '95': 95px,
  // '95_': 95px * 0.5,
  // '100': 100px,
);

// flexレイアウトラッパー
.c-flex {
  display: flex;
  flex-wrap: wrap;

  > * {
    flex: 0 1 auto;
    display: flex;
    flex-direction: column;
    min-height: 1px;
    max-width: 100%;
  }

  // .c-flex--fit
  &--fit {
    > * {
      flex-direction: row;
    }
  }
}

@mixin _flex($prefix: '') {
  @each $key, $val in $flexGutterMap {
    $_gutter: rem($val);

    // 左右
    .#{$prefix}c-flex--x#{$key} {
      margin-left: -$_gutter;
      margin-right: -$_gutter;

      > * {
        padding-left: $_gutter;
        padding-right: $_gutter;
      }
    }

    // 上下
    .#{$prefix}c-flex--y#{$key} {
      margin-top: -$_gutter;
      margin-bottom: -$_gutter;

      > * {
        padding-top: $_gutter;
        padding-bottom: $_gutter;
      }
    }
  }
}


@include _flex('');

@each $screen in $screen-list-min {
  $prefix: str-slice($screen, 0, 1);

  // $prefixBreak: "#{$prefix}\\:";
  // @include break($screen) {
  // }

  $prefixOver: "#{to-upper-case($prefix)}\\:";
  @include over($screen) {
    @include _flex($prefixOver);
  }
}

/*! purgecss end ignore */
